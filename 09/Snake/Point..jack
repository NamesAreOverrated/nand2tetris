class Point{
    field int x,y;
    field Point next;
     constructor Point new(int Ax, int Ay,Point nextA) {
      let x = Ax;
      let y = Ay;
      let next=nextA;
      do draw();
      return this;
   }  
   
   method void dispose() {
      if(~(next=null)){
        do next.dispose();
      }
      do erase();
      do Memory.deAlloc(this);

      return;
   }

    
    method int getX(){
        return x;
    }
    method int getY(){
        return y;
    }
    method Point getNext(){
        return next;
    }
    method void setNext(Point pointN){
       let next=pointN;
       return ;
    }
    
    method Point getEnd(){
        if(~(next=null)){
        return next.getEnd();
        }
        return this;
    }
    method void removeEnd(){
        var Point child,grandChild;
        let child=next;
        let grandChild=next.getNext();
        if(~(grandChild=null)){
            do child.removeEnd();
            return;
        }
        do child.dispose();
        let next=null;
        return;
    }

    method void draw(){
        do Screen.setColor(true);
        do Screen.drawRectangle(x, y, x +10, y +10);
        if(~(next=null)){
            do next.draw();    
        }
    return;
    }
    method void erase() {
        do Screen.setColor(false);
        do Screen.drawRectangle(x, y, x +10, y +10);

        if(~(next=null)){
            do next.erase();  
        }
        return;
    }
   


}